{"version":3,"sources":["Shapes.js","context.js","TodoItem.js","TodoList.js","Header.js","FilterItem.js","FiltersList.js","Footer.js","App.js","index.js"],"names":["TodoShape","PropTypes","shape","title","string","isRequired","id","number","completed","bool","Context","arrayOf","React","createContext","TodoItem","todo","useContext","todoToggle","removeTodo","className","type","checked","onChange","htmlFor","onClick","TodoList","todos","toggleAllTodos","map","key","Header","addTodo","useState","value","setValue","onSubmit","event","preventDefault","trim","placeholder","target","FilterItem","filterName","addFilter","href","FiltersList","filter","Footer","clearedCompleted","length","App","setTodos","setFilter","allTodos","Provider","prev","name","Date","now","todosItems","some","ReactDOM","render","document","getElementById"],"mappings":"+PAEaA,EAAYC,IAAUC,MAAM,CACvCC,MAAOF,IAAUG,OAAOC,WACxBC,GAAIL,IAAUM,OAAOF,WACrBG,UAAWP,IAAUQ,KAAKJ,aCDbK,GDIMT,IAAUU,QAAQX,GCNvBY,IAAMC,iBCEf,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAAQ,EACEC,qBAAWN,GAAtCO,EADyB,EACzBA,WAAYC,EADa,EACbA,WACZf,EAAyBY,EAAzBZ,MAAOG,EAAkBS,EAAlBT,GAAIE,EAAcO,EAAdP,UAEnB,OACE,wBAAIW,UAAWX,EAAY,YAAc,IACvC,yBAAKW,UAAU,QACb,2BACEC,KAAK,WACLD,UAAU,SACVb,GAAE,eAAUA,GACZe,QAASb,EACTc,SAAU,kBAAML,EAAWX,MAE7B,2BAAOiB,QAAO,eAAUjB,IACrBH,GAEH,4BACEiB,KAAK,SACLD,UAAU,UACVK,QAAS,kBAAMN,EAAWZ,OAG9B,2BAAOc,KAAK,OAAOD,UAAU,UCtB5B,SAASM,EAAT,GAA8C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,eAChC,OACE,oCACE,2BACEP,KAAK,WACLd,GAAG,aACHa,UAAU,aACVG,SAAU,kBAAMK,EAAeD,MAEjC,2BAAOH,QAAQ,cAAf,wBACA,wBAAIJ,UAAU,aACXO,EAAME,KAAI,SAAAb,GAAI,OACb,kBAACD,EAAD,CAAUe,IAAKd,EAAKT,GAAIS,KAAMA,SCdjC,SAASe,EAAT,GAA8B,IAAZC,EAAW,EAAXA,QAAW,EACRC,mBAAS,IADD,mBAC3BC,EAD2B,KACpBC,EADoB,KAYlC,OACE,4BAAQf,UAAU,UAChB,qCAEA,0BAAMgB,SAbV,SAAuBC,GACrBA,EAAMC,iBAEFJ,EAAMK,SACRP,EAAQE,GACRC,EAAS,OASP,2BACEf,UAAU,WACVoB,YAAY,yBACZN,MAAOA,EACPX,SAAU,SAAAc,GAAK,OAAIF,EAASE,EAAMI,OAAOP,YCpB5C,SAASQ,EAAT,GAAqC,IAAfC,EAAc,EAAdA,WACnBC,EAAc3B,qBAAWN,GAAzBiC,UAER,OACE,4BACE,uBACEC,KAAI,YAAOF,GACXlB,QAAS,kBAAMmB,EAAUD,IACzBvB,UAAU,YAETuB,ICXF,SAASG,IAGd,OACE,oCACE,wBAAI1B,UAAU,WAJG,CAAC,MAAO,SAAU,aAKnBS,KAAI,SAAAkB,GAAM,OACtB,kBAACL,EAAD,CAAYC,WAAYI,EAAQjB,IAAKiB,SCLxC,SAASC,EAAT,GAA8C,IAA5BrB,EAA2B,EAA3BA,MAAOsB,EAAoB,EAApBA,iBAC9B,OACE,4BAAQ7B,UAAU,UAChB,0BAAMA,UAAU,cAAhB,UACMO,EAAMuB,OADZ,gBAIA,kBAACJ,EAAD,MAEA,4BACEzB,KAAK,SACLD,UAAU,kBACVK,QAAS,kBAAMwB,MAHjB,oBCyGSE,MAjHf,WAAgB,IAAD,EACalB,mBAAS,CACjC,CACE1B,GAAI,EACJH,MAAO,iBACPK,WAAW,EACXsC,OAAQ,OAEV,CACExC,GAAI,EACJH,MAAO,cACPK,WAAW,EACXsC,OAAQ,OAEV,CACExC,GAAI,EACJH,MAAO,mBACPK,WAAW,EACXsC,OAAQ,SAlBC,mBACNpB,EADM,KACCyB,EADD,OAsBenB,mBAAS,OAtBxB,mBAsBNc,EAtBM,KAsBEM,EAtBF,KA+ETC,EAAW,GAEf,OAAQP,GACN,IAAK,SACHO,EAAW3B,EAAMoB,QAAO,SAAA/B,GAAI,OAAuB,IAAnBA,EAAKP,aACrC,MACF,IAAK,YACH6C,EAAW3B,EAAMoB,QAAO,SAAA/B,GAAI,OAAuB,IAAnBA,EAAKP,aACrC,MACF,QACE6C,EAAW3B,EAIf,OACE,kBAAC,EAAQ4B,SAAT,CAAkBrB,MAAO,CACvBhB,WAvEJ,SAAoBX,GAClB,OAAO6C,GACL,SAAAI,GAAI,OAAIA,EAAK3B,KAAI,SAACb,GAAU,IAClBP,EAAcO,EAAdP,UAER,OAAIO,EAAKT,KAAOA,EACP,2BACFS,GADL,IAEEP,WAAYA,IAITO,SA2DGG,WA5BhB,SAAoBZ,GAClB,OAAO6C,GAAS,SAAAI,GAAI,OAAIA,EAAKT,QAAO,SAAA/B,GAAI,OAAIA,EAAKT,KAAOA,SA2B9BqC,UApB5B,SAAmBa,GACjB,OAAOJ,EAAUI,MAsBf,6BAASrC,UAAU,WACjB,kBAACW,EAAD,CAAQC,QA9Cd,SAAiBE,GACf,OAAOkB,EAAS,GAAD,mBAERzB,GAFQ,CAGX,CACEpB,GAAImD,KAAKC,MACTvD,MAAO8B,EACPzB,WAAW,EACXsC,OAAQ,aAuCV,6BAAS3B,UAAU,QACjB,kBAACM,EAAD,CAAUC,MAAO2B,EAAU1B,eA5DnC,SAAwBgC,GACtB,OAAOA,EAAWC,MAAK,SAAA7C,GAAI,OAAuB,IAAnBA,EAAKP,aAChC2C,EAASQ,EAAW/B,KAAI,SAAAb,GAAI,kCACzBA,GADyB,IAE5BP,WAAW,QAEX2C,EAASQ,EAAW/B,KAAI,SAAAb,GAAI,kCACzBA,GADyB,IAE5BP,WAAW,YAuDVkB,EAAMuB,OACH,kBAACF,EAAD,CAAQrB,MAAO2B,EAAUL,iBAlCnC,WACE,OAAOG,GAAS,SAAAI,GAAI,OAAIA,EAAKT,QAAO,SAAA/B,GAAI,OAAuB,IAAnBA,EAAKP,mBAkCzC,MC1GZqD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2de3c06d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const TodoShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n});\n\nexport const Todos = PropTypes.arrayOf(TodoShape);\n","import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, { useContext } from 'react';\nimport { TodoShape } from './Shapes';\nimport Context from './context';\n\nexport function TodoItem({ todo }) {\n  const { todoToggle, removeTodo } = useContext(Context);\n  const { title, id, completed } = todo;\n\n  return (\n    <li className={completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${id}`}\n          checked={completed}\n          onChange={() => todoToggle(id)}\n        />\n        <label htmlFor={`todo-${id}`}>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => removeTodo(id)}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n}\n\nTodoItem.propTypes = TodoShape.isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from './TodoItem';\nimport { TodoShape } from './Shapes';\n\nexport function TodoList({ todos, toggleAllTodos }) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={() => toggleAllTodos(todos)}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <TodoItem key={todo.id} todo={todo} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoShape).isRequired,\n  toggleAllTodos: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Header({ addTodo }) {\n  const [value, setValue] = useState('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (value.trim()) {\n      addTodo(value);\n      setValue('');\n    }\n  }\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={submitHandler}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={value}\n          onChange={event => setValue(event.target.value)}\n\n        />\n      </form>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './context';\n\nexport function FilterItem({ filterName }) {\n  const { addFilter } = useContext(Context);\n\n  return (\n    <li>\n      <a\n        href={`#/${filterName}`}\n        onClick={() => addFilter(filterName)}\n        className=\"selected\"\n      >\n        {filterName}\n      </a>\n    </li>\n  );\n}\n\nFilterItem.propTypes = {\n  filterName: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { FilterItem } from './FilterItem';\n\nexport function FiltersList() {\n  const filtersTypes = ['All', 'Active', 'Completed'];\n\n  return (\n    <>\n      <ul className=\"filters\">\n        {filtersTypes.map(filter => (\n          <FilterItem filterName={filter} key={filter} />\n        ))}\n      </ul>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todos } from './Shapes';\nimport { FiltersList } from './FiltersList';\n\nexport function Footer({ todos, clearedCompleted }) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todos.length} items left`}\n      </span>\n\n      <FiltersList />\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => clearedCompleted()}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  todos: Todos.isRequired,\n  clearedCompleted: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { TodoList } from './TodoList';\nimport Context from './context';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      title: 'Learn HTML/CSS',\n      completed: false,\n      filter: 'All',\n    },\n    {\n      id: 2,\n      title: 'Learn React',\n      completed: false,\n      filter: 'All',\n    },\n    {\n      id: 3,\n      title: 'Learn JavaScript',\n      completed: false,\n      filter: 'All',\n    },\n  ]);\n\n  const [filter, setFilter] = useState('All');\n\n  function todoToggle(id) {\n    return setTodos(\n      prev => prev.map((todo) => {\n        const { completed } = todo;\n\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !completed,\n          };\n        }\n\n        return todo;\n      }),\n    );\n  }\n\n  function toggleAllTodos(todosItems) {\n    return todosItems.some(todo => todo.completed === false)\n      ? setTodos(todosItems.map(todo => ({\n        ...todo,\n        completed: true,\n      })))\n      : setTodos(todosItems.map(todo => ({\n        ...todo,\n        completed: false,\n      })));\n  }\n\n  function addTodo(value) {\n    return setTodos(\n      [\n        ...todos,\n        {\n          id: Date.now(),\n          title: value,\n          completed: false,\n          filter: 'All',\n        },\n      ],\n    );\n  }\n\n  function removeTodo(id) {\n    return setTodos(prev => prev.filter(todo => todo.id !== id));\n  }\n\n  function clearedCompleted() {\n    return setTodos(prev => prev.filter(todo => todo.completed === false));\n  }\n\n  function addFilter(name) {\n    return setFilter(name);\n  }\n\n  let allTodos = [];\n\n  switch (filter) {\n    case 'Active':\n      allTodos = todos.filter(todo => todo.completed === false);\n      break;\n    case 'Completed':\n      allTodos = todos.filter(todo => todo.completed === true);\n      break;\n    default:\n      allTodos = todos;\n      break;\n  }\n\n  return (\n    <Context.Provider value={{\n      todoToggle, removeTodo, addFilter,\n    }}\n    >\n      <section className=\"todoapp\">\n        <Header addTodo={addTodo} />\n        <section className=\"main\">\n          <TodoList todos={allTodos} toggleAllTodos={toggleAllTodos} />\n        </section>\n\n        {todos.length\n          ? <Footer todos={allTodos} clearedCompleted={clearedCompleted} />\n          : ''\n        }\n      </section>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}